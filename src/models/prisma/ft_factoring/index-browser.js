
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ArchivoScalarFieldEnum = {
  idarchivo: 'idarchivo',
  archivoid: 'archivoid',
  idarchivotipo: 'idarchivotipo',
  idarchivoestado: 'idarchivoestado',
  codigo: 'codigo',
  nombrereal: 'nombrereal',
  nombrealmacenamiento: 'nombrealmacenamiento',
  ruta: 'ruta',
  tamanio: 'tamanio',
  mimetype: 'mimetype',
  encoding: 'encoding',
  extension: 'extension',
  observacion: 'observacion',
  fechavencimiento: 'fechavencimiento',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_colaboradorScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idcolaborador: 'idcolaborador',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_cuenta_bancariaScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idcuentabancaria: 'idcuentabancaria',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_empresaScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idempresa: 'idempresa',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_estadoScalarFieldEnum = {
  idarchivoestado: 'idarchivoestado',
  archivoestadoid: 'archivoestadoid',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_factoring_historial_estadoScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idfactoringhistorialestado: 'idfactoringhistorialestado',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_facturaScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idfactura: 'idfactura',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_inversionista_depositoScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idinversionistadeposito: 'idinversionistadeposito',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_inversionista_retiroScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idinversionistaretiro: 'idinversionistaretiro',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_personaScalarFieldEnum = {
  idarchivo: 'idarchivo',
  idpersona: 'idpersona',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Archivo_tipoScalarFieldEnum = {
  idarchivotipo: 'idarchivotipo',
  archivotipoid: 'archivotipoid',
  code: 'code',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.BancoScalarFieldEnum = {
  idbanco: 'idbanco',
  bancoid: 'bancoid',
  tipo: 'tipo',
  nombre: 'nombre',
  alias: 'alias',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_cuentaScalarFieldEnum = {
  idbancocuenta: 'idbancocuenta',
  bancocuentaid: 'bancocuentaid',
  code: 'code',
  idbancocuentatipo: 'idbancocuentatipo',
  idmoneda: 'idmoneda',
  idbancocuentaestado: 'idbancocuentaestado',
  numero: 'numero',
  disponible_confirmado: 'disponible_confirmado',
  disponible_proceso: 'disponible_proceso',
  reservado_subasta: 'reservado_subasta',
  reservado_retiro: 'reservado_retiro',
  invertido: 'invertido',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_cuenta_estadoScalarFieldEnum = {
  idbancocuentaestado: 'idbancocuentaestado',
  bancocuentaestadoid: 'bancocuentaestadoid',
  code: 'code',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_cuenta_tipoScalarFieldEnum = {
  idbancocuentatipo: 'idbancocuentatipo',
  bancocuentatipoid: 'bancocuentatipoid',
  code: 'code',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccionScalarFieldEnum = {
  idbancotransaccion: 'idbancotransaccion',
  bancotransaccionid: 'bancotransaccionid',
  code: 'code',
  idbancocuenta: 'idbancocuenta',
  idbancotransaciontipo: 'idbancotransaciontipo',
  idbancotransaccionestado: 'idbancotransaccionestado',
  idbancotransaccionestadohistorial: 'idbancotransaccionestadohistorial',
  fecha_solicitud: 'fecha_solicitud',
  fecha_efectiva: 'fecha_efectiva',
  monto: 'monto',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccion_estadoScalarFieldEnum = {
  idbancotransaccionestado: 'idbancotransaccionestado',
  bancotransaccionestadoid: 'bancotransaccionestadoid',
  code: 'code',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccion_estado_historialScalarFieldEnum = {
  idbancotransaccionestadohistorial: 'idbancotransaccionestadohistorial',
  bancotransaccionestadohistorialid: 'bancotransaccionestadohistorialid',
  code: 'code',
  idbancotransaccion: 'idbancotransaccion',
  idbancotransaccionestado: 'idbancotransaccionestado',
  idusuariomodifica: 'idusuariomodifica',
  motivo: 'motivo',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccion_factoring_inversionScalarFieldEnum = {
  idbancotransaccion: 'idbancotransaccion',
  idfactoringinversion: 'idfactoringinversion',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccion_inversionista_depositoScalarFieldEnum = {
  idbancotransaccion: 'idbancotransaccion',
  idinversionistadeposito: 'idinversionistadeposito',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccion_inversionista_retiroScalarFieldEnum = {
  idbancotransaccion: 'idbancotransaccion',
  idinversionistaretiro: 'idinversionistaretiro',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Banco_transaccion_tipoScalarFieldEnum = {
  idbancotransacciontipo: 'idbancotransacciontipo',
  bancotransacciontipoid: 'bancotransacciontipoid',
  code: 'code',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.ColaboradorScalarFieldEnum = {
  idcolaborador: 'idcolaborador',
  colaboradorid: 'colaboradorid',
  idempresa: 'idempresa',
  idpersona: 'idpersona',
  idcolaboradortipo: 'idcolaboradortipo',
  iddocumentotipo: 'iddocumentotipo',
  documentonumero: 'documentonumero',
  nombrecolaborador: 'nombrecolaborador',
  apellidocolaborador: 'apellidocolaborador',
  cargo: 'cargo',
  email: 'email',
  telefono: 'telefono',
  poderpartidanumero: 'poderpartidanumero',
  poderpartidaciudad: 'poderpartidaciudad',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Colaborador_tipoScalarFieldEnum = {
  idcolaboradortipo: 'idcolaboradortipo',
  colaboradortipoid: 'colaboradortipoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Configuracion_appScalarFieldEnum = {
  idconfiguracionapp: 'idconfiguracionapp',
  configuracionappid: 'configuracionappid',
  code: 'code',
  variable: 'variable',
  valor: 'valor',
  unidad: 'unidad',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.ContactoScalarFieldEnum = {
  idcontacto: 'idcontacto',
  contactoid: 'contactoid',
  code: 'code',
  idempresa: 'idempresa',
  nombrecontacto: 'nombrecontacto',
  apellidocontacto: 'apellidocontacto',
  cargo: 'cargo',
  email: 'email',
  celular: 'celular',
  telefono: 'telefono',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.CredencialScalarFieldEnum = {
  idcredencial: 'idcredencial',
  credencialid: 'credencialid',
  code: 'code',
  idusuario: 'idusuario',
  password: 'password',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Cuenta_bancariaScalarFieldEnum = {
  idcuentabancaria: 'idcuentabancaria',
  cuentabancariaid: 'cuentabancariaid',
  code: 'code',
  idbanco: 'idbanco',
  idcuentatipo: 'idcuentatipo',
  idmoneda: 'idmoneda',
  idcuentabancariaestado: 'idcuentabancariaestado',
  numero: 'numero',
  cci: 'cci',
  alias: 'alias',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Cuenta_bancaria_estadoScalarFieldEnum = {
  idcuentabancariaestado: 'idcuentabancariaestado',
  cuentabancariaestadoid: 'cuentabancariaestadoid',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Cuenta_tipoScalarFieldEnum = {
  idcuentatipo: 'idcuentatipo',
  cuentatipoid: 'cuentatipoid',
  nombre: 'nombre',
  alias: 'alias',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.DepartamentoScalarFieldEnum = {
  iddepartamento: 'iddepartamento',
  departamentoid: 'departamentoid',
  idpais: 'idpais',
  codigodepartamento: 'codigodepartamento',
  nombredepartamento: 'nombredepartamento',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.DistritoScalarFieldEnum = {
  iddistrito: 'iddistrito',
  distritoid: 'distritoid',
  idprovincia: 'idprovincia',
  idregionnatural: 'idregionnatural',
  codigodistrito: 'codigodistrito',
  nombredistrito: 'nombredistrito',
  capitallegal: 'capitallegal',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Documento_tipoScalarFieldEnum = {
  iddocumentotipo: 'iddocumentotipo',
  documentotipoid: 'documentotipoid',
  nombre: 'nombre',
  alias: 'alias',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.EmpresaScalarFieldEnum = {
  idempresa: 'idempresa',
  empresaid: 'empresaid',
  code: 'code',
  idpaissede: 'idpaissede',
  iddepartamentosede: 'iddepartamentosede',
  idprovinciasede: 'idprovinciasede',
  iddistritosede: 'iddistritosede',
  idriesgo: 'idriesgo',
  ruc: 'ruc',
  razon_social: 'razon_social',
  nombre_comercial: 'nombre_comercial',
  fecha_inscripcion: 'fecha_inscripcion',
  domicilio_fiscal: 'domicilio_fiscal',
  direccion_sede: 'direccion_sede',
  direccion_sede_referencia: 'direccion_sede_referencia',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Empresa_cuenta_bancariaScalarFieldEnum = {
  idempresacuentabancaria: 'idempresacuentabancaria',
  empresacuentabancariaid: 'empresacuentabancariaid',
  code: 'code',
  idempresa: 'idempresa',
  idcuentabancaria: 'idcuentabancaria',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.FactorScalarFieldEnum = {
  idfactor: 'idfactor',
  factorid: 'factorid',
  code: 'code',
  idpaissede: 'idpaissede',
  iddepartamentosede: 'iddepartamentosede',
  idprovinciasede: 'idprovinciasede',
  iddistritosede: 'iddistritosede',
  idriesgo: 'idriesgo',
  ruc: 'ruc',
  razon_social: 'razon_social',
  nombre_comercial: 'nombre_comercial',
  fecha_inscripcion: 'fecha_inscripcion',
  domicilio_fiscal: 'domicilio_fiscal',
  direccion_sede: 'direccion_sede',
  direccion_sede_referencia: 'direccion_sede_referencia',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factor_cuenta_bancariaScalarFieldEnum = {
  idfactorcuentabancaria: 'idfactorcuentabancaria',
  factorcuentabancariaid: 'factorcuentabancariaid',
  code: 'code',
  idfactor: 'idfactor',
  idcuentabancaria: 'idcuentabancaria',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.FactoringScalarFieldEnum = {
  idfactoring: 'idfactoring',
  factoringid: 'factoringid',
  code: 'code',
  idaceptante: 'idaceptante',
  idcedente: 'idcedente',
  idmoneda: 'idmoneda',
  idfactoringestado: 'idfactoringestado',
  idcuentabancaria: 'idcuentabancaria',
  idcontactoaceptante: 'idcontactoaceptante',
  idcontactocedente: 'idcontactocedente',
  idfactoringejecutado: 'idfactoringejecutado',
  idfactoringpropuestaaceptada: 'idfactoringpropuestaaceptada',
  cantidad_facturas: 'cantidad_facturas',
  fecha_registro: 'fecha_registro',
  fecha_emision: 'fecha_emision',
  fecha_operacion: 'fecha_operacion',
  fecha_pago_estimado: 'fecha_pago_estimado',
  monto_factura: 'monto_factura',
  monto_detraccion: 'monto_detraccion',
  monto_neto: 'monto_neto',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_config_comisionScalarFieldEnum = {
  idfactoringconfigcomision: 'idfactoringconfigcomision',
  factoringconfigcomisionid: 'factoringconfigcomisionid',
  code: 'code',
  idriesgo: 'idriesgo',
  version: 'version',
  factor1: 'factor1',
  factor2: 'factor2',
  factor3: 'factor3',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_config_garantiaScalarFieldEnum = {
  idfactoringconfiggarantia: 'idfactoringconfiggarantia',
  factoringconfiggarantiaid: 'factoringconfiggarantiaid',
  code: 'code',
  idriesgo: 'idriesgo',
  version: 'version',
  monto_neto_min: 'monto_neto_min',
  monto_neto_max: 'monto_neto_max',
  porcentaje_dias_cubre_garantia: 'porcentaje_dias_cubre_garantia',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_config_tasa_descuentoScalarFieldEnum = {
  idfactoringconfigtasadescuento: 'idfactoringconfigtasadescuento',
  factoringconfigtasadescuentoid: 'factoringconfigtasadescuentoid',
  code: 'code',
  idriesgo: 'idriesgo',
  version: 'version',
  mensual_minimo: 'mensual_minimo',
  mensual_maximo: 'mensual_maximo',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_ejecutadoScalarFieldEnum = {
  idfactoringejecutado: 'idfactoringejecutado',
  factoringejecutadoid: 'factoringejecutadoid',
  code: 'code',
  idfactoring: 'idfactoring',
  idfactoringejecutadoaestado: 'idfactoringejecutadoaestado',
  fecha_propuesta: 'fecha_propuesta',
  fecha_pago_real: 'fecha_pago_real',
  dias_pago_real: 'dias_pago_real',
  dias_antiguedad_real: 'dias_antiguedad_real',
  dias_cobertura_garantia_real: 'dias_cobertura_garantia_real',
  dias_mora_real: 'dias_mora_real',
  monto_neto: 'monto_neto',
  monto_garantia_real: 'monto_garantia_real',
  monto_efectivo_real: 'monto_efectivo_real',
  monto_descuento_real: 'monto_descuento_real',
  monto_financiado_real: 'monto_financiado_real',
  monto_comision_real: 'monto_comision_real',
  monto_comision_igv_real: 'monto_comision_igv_real',
  monto_adelanto_real: 'monto_adelanto_real',
  monto_costo_real: 'monto_costo_real',
  monto_dia_mora: 'monto_dia_mora',
  monto_dia_interes: 'monto_dia_interes',
  porcentaje_garantia_real: 'porcentaje_garantia_real',
  porcentaje_efectivo_real: 'porcentaje_efectivo_real',
  porcentaje_descuento_real: 'porcentaje_descuento_real',
  porcentaje_financiado_real: 'porcentaje_financiado_real',
  porcentaje_comision_real: 'porcentaje_comision_real',
  porcentaje_adelanto_real: 'porcentaje_adelanto_real',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_ejecutado_estadoScalarFieldEnum = {
  idfactoringejecutadoestado: 'idfactoringejecutadoestado',
  factoringejecutadoestadoid: 'factoringejecutadoestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_estadoScalarFieldEnum = {
  idfactoringestado: 'idfactoringestado',
  factoringestadoid: 'factoringestadoid',
  estado1: 'estado1',
  estado2: 'estado2',
  alias_estado1: 'alias_estado1',
  alias_estado2: 'alias_estado2',
  accion: 'accion',
  orden: 'orden',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_estrategiaScalarFieldEnum = {
  idfactoringestrategia: 'idfactoringestrategia',
  factoringestrategiaid: 'factoringestrategiaid',
  code: 'code',
  nombre_estrategia: 'nombre_estrategia',
  descripcion: 'descripcion',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_facturaScalarFieldEnum = {
  idfactoring: 'idfactoring',
  idfactura: 'idfactura',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_historial_estadoScalarFieldEnum = {
  idfactoringhistorialestado: 'idfactoringhistorialestado',
  factoringhistorialestadoid: 'factoringhistorialestadoid',
  code: 'code',
  idfactoring: 'idfactoring',
  idfactoringestado: 'idfactoringestado',
  idusuariomodifica: 'idusuariomodifica',
  comentario: 'comentario',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_inversionScalarFieldEnum = {
  idfactoringinversion: 'idfactoringinversion',
  factoringinversionid: 'factoringinversionid',
  code: 'code',
  idfactoring: 'idfactoring',
  idinversionista: 'idinversionista',
  monto_invertido: 'monto_invertido',
  fecha_inversion: 'fecha_inversion',
  porcentaje_participacion: 'porcentaje_participacion',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_pagoScalarFieldEnum = {
  idfactoringpago: 'idfactoringpago',
  factoringpagoid: 'factoringpagoid',
  code: 'code',
  idfactoring: 'idfactoring',
  idempresacuentabancaria: 'idempresacuentabancaria',
  idfactorcuentabancaria: 'idfactorcuentabancaria',
  numero_operacion: 'numero_operacion',
  fecha_pago: 'fecha_pago',
  monto_pagado: 'monto_pagado',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_propuestaScalarFieldEnum = {
  idfactoringpropuesta: 'idfactoringpropuesta',
  factoringpropuestaid: 'factoringpropuestaid',
  code: 'code',
  idfactoring: 'idfactoring',
  idfactoringtipo: 'idfactoringtipo',
  idfactoringpropuestaestado: 'idfactoringpropuestaestado',
  idriesgooperacion: 'idriesgooperacion',
  idriesgoaceptante: 'idriesgoaceptante',
  idriesgocedente: 'idriesgocedente',
  idfactoringestrategia: 'idfactoringestrategia',
  tda: 'tda',
  tdm: 'tdm',
  tdd: 'tdd',
  tda_mora: 'tda_mora',
  tdm_mora: 'tdm_mora',
  tdd_mora: 'tdd_mora',
  fecha_propuesta: 'fecha_propuesta',
  fecha_pago_estimado: 'fecha_pago_estimado',
  dias_pago_estimado: 'dias_pago_estimado',
  dias_antiguedad_estimado: 'dias_antiguedad_estimado',
  dias_cobertura_garantia_estimado: 'dias_cobertura_garantia_estimado',
  monto_neto: 'monto_neto',
  monto_garantia: 'monto_garantia',
  monto_efectivo: 'monto_efectivo',
  monto_descuento: 'monto_descuento',
  monto_financiado: 'monto_financiado',
  monto_comision: 'monto_comision',
  monto_comision_igv: 'monto_comision_igv',
  monto_costo_estimado: 'monto_costo_estimado',
  monto_costo_estimado_igv: 'monto_costo_estimado_igv',
  monto_gasto_estimado: 'monto_gasto_estimado',
  monto_gasto_estimado_igv: 'monto_gasto_estimado_igv',
  monto_total_igv: 'monto_total_igv',
  monto_adelanto: 'monto_adelanto',
  monto_dia_mora_estimado: 'monto_dia_mora_estimado',
  monto_dia_interes_estimado: 'monto_dia_interes_estimado',
  porcentaje_garantia_estimado: 'porcentaje_garantia_estimado',
  porcentaje_efectivo_estimado: 'porcentaje_efectivo_estimado',
  porcentaje_descuento_estimado: 'porcentaje_descuento_estimado',
  porcentaje_financiado_estimado: 'porcentaje_financiado_estimado',
  porcentaje_adelanto_estimado: 'porcentaje_adelanto_estimado',
  porcentaje_comision_estimado: 'porcentaje_comision_estimado',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_propuesta_estadoScalarFieldEnum = {
  idfactoringpropuestaestado: 'idfactoringpropuestaestado',
  factoringpropuestaestadoid: 'factoringpropuestaestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_propuesta_financieroScalarFieldEnum = {
  idfactoringpropuestafinanciero: 'idfactoringpropuestafinanciero',
  factoringpropuestafinancieroid: 'factoringpropuestafinancieroid',
  code: 'code',
  idfactoringpropuesta: 'idfactoringpropuesta',
  idfinancierotipo: 'idfinancierotipo',
  idfinancieroconcepto: 'idfinancieroconcepto',
  descripcion: 'descripcion',
  monto: 'monto',
  igv: 'igv',
  total: 'total',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factoring_tipoScalarFieldEnum = {
  idfactoringtipo: 'idfactoringtipo',
  factoringtipoid: 'factoringtipoid',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.FacturaScalarFieldEnum = {
  idfactura: 'idfactura',
  facturaid: 'facturaid',
  code: 'code',
  idusuarioupload: 'idusuarioupload',
  UBLVersionID: 'UBLVersionID',
  CustomizationID: 'CustomizationID',
  serie: 'serie',
  numero_comprobante: 'numero_comprobante',
  fecha_emision: 'fecha_emision',
  hora_emision: 'hora_emision',
  fecha_vencimiento: 'fecha_vencimiento',
  codigo_tipo_documento: 'codigo_tipo_documento',
  codigo_tipo_moneda: 'codigo_tipo_moneda',
  cantidad_items: 'cantidad_items',
  fecha_registro: 'fecha_registro',
  detraccion_cantidad: 'detraccion_cantidad',
  detraccion_monto: 'detraccion_monto',
  pago_cantidad_cuotas: 'pago_cantidad_cuotas',
  fecha_pago_mayor_estimado: 'fecha_pago_mayor_estimado',
  dias_desde_emision: 'dias_desde_emision',
  dias_estimados_para_pago: 'dias_estimados_para_pago',
  importe_bruto: 'importe_bruto',
  importe_neto: 'importe_neto',
  proveedor_ruc: 'proveedor_ruc',
  proveedor_razon_social: 'proveedor_razon_social',
  proveedor_direccion: 'proveedor_direccion',
  proveedor_codigo_pais: 'proveedor_codigo_pais',
  proveedor_ubigeo: 'proveedor_ubigeo',
  proveedor_provincia: 'proveedor_provincia',
  proveedor_departamento: 'proveedor_departamento',
  proveedor_urbanizacion: 'proveedor_urbanizacion',
  proveedor_distrito: 'proveedor_distrito',
  cliente_ruc: 'cliente_ruc',
  cliente_razon_social: 'cliente_razon_social',
  impuesto_monto: 'impuesto_monto',
  impuesto_valor_venta_monto_venta: 'impuesto_valor_venta_monto_venta',
  impuesto_valor_venta_monto_venta_mas_impuesto: 'impuesto_valor_venta_monto_venta_mas_impuesto',
  impuesto_valor_venta_monto_pago: 'impuesto_valor_venta_monto_pago',
  codigo_archivo: 'codigo_archivo',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factura_impuestoScalarFieldEnum = {
  idfacturaimpuesto: 'idfacturaimpuesto',
  facturaimpuestoid: 'facturaimpuestoid',
  idfactura: 'idfactura',
  id: 'id',
  codigo_sunat: 'codigo_sunat',
  nombre: 'nombre',
  porcentaje: 'porcentaje',
  base_imponible: 'base_imponible',
  monto: 'monto',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factura_itemScalarFieldEnum = {
  idfacturaitem: 'idfacturaitem',
  facturaitemid: 'facturaitemid',
  idfactura: 'idfactura',
  id: 'id',
  codigo_producto_sunat: 'codigo_producto_sunat',
  codigo_producto_vendedor: 'codigo_producto_vendedor',
  unidad_medida: 'unidad_medida',
  cantidad: 'cantidad',
  descripcion: 'descripcion',
  valor_unitario: 'valor_unitario',
  precio_venta: 'precio_venta',
  impuesto_codigo_sunat: 'impuesto_codigo_sunat',
  impuesto_nombre: 'impuesto_nombre',
  impuesto_porcentaje: 'impuesto_porcentaje',
  impuesto_codigo_afectacion_sunat: 'impuesto_codigo_afectacion_sunat',
  impuesto_base_imponible: 'impuesto_base_imponible',
  impuesto_monto: 'impuesto_monto',
  moneda: 'moneda',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factura_medio_pagoScalarFieldEnum = {
  idfacturamediopago: 'idfacturamediopago',
  facturamediopagoid: 'facturamediopagoid',
  idfactura: 'idfactura',
  id: 'id',
  medio_pago_codigo: 'medio_pago_codigo',
  cuenta_bancaria: 'cuenta_bancaria',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factura_notaScalarFieldEnum = {
  idfacturanota: 'idfacturanota',
  facturanotaid: 'facturanotaid',
  idfactura: 'idfactura',
  id: 'id',
  descripcion: 'descripcion',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Factura_termino_pagoScalarFieldEnum = {
  idfacturaterminopago: 'idfacturaterminopago',
  facturaterminopagoid: 'facturaterminopagoid',
  idfactura: 'idfactura',
  id: 'id',
  forma_pago: 'forma_pago',
  monto: 'monto',
  porcentaje: 'porcentaje',
  fecha_pago: 'fecha_pago',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Financiero_conceptoScalarFieldEnum = {
  idfinancieroconcepto: 'idfinancieroconcepto',
  financieroconceptoid: 'financieroconceptoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Financiero_tipoScalarFieldEnum = {
  idfinancierotipo: 'idfinancierotipo',
  financierotipoid: 'financierotipoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.GeneroScalarFieldEnum = {
  idgenero: 'idgenero',
  generoid: 'generoid',
  nombregenero: 'nombregenero',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.InversionistaScalarFieldEnum = {
  idinversionista: 'idinversionista',
  inversionistaid: 'inversionistaid',
  code: 'code',
  idpersona: 'idpersona',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Inversionista_banco_cuentaScalarFieldEnum = {
  idinversionista: 'idinversionista',
  idbancocuenta: 'idbancocuenta',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Inversionista_cuenta_bancariaScalarFieldEnum = {
  idinversionistacuentabancaria: 'idinversionistacuentabancaria',
  inversionistacuentabancariaid: 'inversionistacuentabancariaid',
  code: 'code',
  idinversionista: 'idinversionista',
  idcuentabancaria: 'idcuentabancaria',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Inversionista_depositoScalarFieldEnum = {
  idinversionistadeposito: 'idinversionistadeposito',
  inversionistadepositoid: 'inversionistadepositoid',
  code: 'code',
  idbancocuenta: 'idbancocuenta',
  idinversionistacuentabancaria: 'idinversionistacuentabancaria',
  idfactorcuentabancaria: 'idfactorcuentabancaria',
  fecha_solicitud: 'fecha_solicitud',
  numero_operacion: 'numero_operacion',
  monto_depositado: 'monto_depositado',
  fecha_transferencia: 'fecha_transferencia',
  comentario: 'comentario',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Inversionista_retiroScalarFieldEnum = {
  idinversionistaretiro: 'idinversionistaretiro',
  inversionistaretiroid: 'inversionistaretiroid',
  code: 'code',
  idbancocuenta: 'idbancocuenta',
  idinversionistacuentabancaria: 'idinversionistacuentabancaria',
  idfactorcuentabancaria: 'idfactorcuentabancaria',
  fecha_solicitud: 'fecha_solicitud',
  monto_retirado: 'monto_retirado',
  numero_operacion: 'numero_operacion',
  fecha_transferencia: 'fecha_transferencia',
  comentario: 'comentario',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.MonedaScalarFieldEnum = {
  idmoneda: 'idmoneda',
  monedaid: 'monedaid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  codigo: 'codigo',
  simbolo: 'simbolo',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.PaisScalarFieldEnum = {
  idpais: 'idpais',
  paisid: 'paisid',
  codigopais: 'codigopais',
  nombrepais: 'nombrepais',
  nacionalidad: 'nacionalidad',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Pep_vinculoScalarFieldEnum = {
  idpepvinculo: 'idpepvinculo',
  pepvinculoid: 'pepvinculoid',
  nombrepepvinculo: 'nombrepepvinculo',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.PersonaScalarFieldEnum = {
  idpersona: 'idpersona',
  personaid: 'personaid',
  code: 'code',
  idusuario: 'idusuario',
  idpersonaverificacionestado: 'idpersonaverificacionestado',
  iddocumentotipo: 'iddocumentotipo',
  idpaisnacionalidad: 'idpaisnacionalidad',
  idpaisnacimiento: 'idpaisnacimiento',
  idpaisresidencia: 'idpaisresidencia',
  iddepartamentoresidencia: 'iddepartamentoresidencia',
  idprovinciaresidencia: 'idprovinciaresidencia',
  iddistritoresidencia: 'iddistritoresidencia',
  idgenero: 'idgenero',
  documentonumero: 'documentonumero',
  personanombres: 'personanombres',
  apellidopaterno: 'apellidopaterno',
  apellidomaterno: 'apellidomaterno',
  email: 'email',
  celular: 'celular',
  fechanacimiento: 'fechanacimiento',
  direccion: 'direccion',
  direccionreferencia: 'direccionreferencia',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Persona_cuenta_bancariaScalarFieldEnum = {
  idpersonacuentabancaria: 'idpersonacuentabancaria',
  personacuentabancariaid: 'personacuentabancariaid',
  code: 'code',
  idpersona: 'idpersona',
  idcuentabancaria: 'idcuentabancaria',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Persona_declaracionScalarFieldEnum = {
  idpersonadeclaracion: 'idpersonadeclaracion',
  personadeclaracionid: 'personadeclaracionid',
  idpersona: 'idpersona',
  espep: 'espep',
  tienevinculopep: 'tienevinculopep',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Persona_pep_directoScalarFieldEnum = {
  idpersonapepdirecto: 'idpersonapepdirecto',
  personapepdirectoid: 'personapepdirectoid',
  idpersona: 'idpersona',
  rucentidad: 'rucentidad',
  nombreentidad: 'nombreentidad',
  cargoentidad: 'cargoentidad',
  desde: 'desde',
  hasta: 'hasta',
  actualmente: 'actualmente',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Persona_pep_indirectoScalarFieldEnum = {
  idpersonapepindirecto: 'idpersonapepindirecto',
  personapepindirectoid: 'personapepindirectoid',
  idpersona: 'idpersona',
  idpepevinculo: 'idpepevinculo',
  identificacionpep: 'identificacionpep',
  nombrescompletospep: 'nombrescompletospep',
  rucentidad: 'rucentidad',
  nombreentidad: 'nombreentidad',
  cargoentidad: 'cargoentidad',
  desde: 'desde',
  hasta: 'hasta',
  actualmente: 'actualmente',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Persona_verificacionScalarFieldEnum = {
  idpersonaverificacion: 'idpersonaverificacion',
  personaverificacionid: 'personaverificacionid',
  idpersona: 'idpersona',
  idpersonaverificacionestado: 'idpersonaverificacionestado',
  idusuarioverifica: 'idusuarioverifica',
  comentariousuario: 'comentariousuario',
  comentariointerno: 'comentariointerno',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Persona_verificacion_estadoScalarFieldEnum = {
  idpersonaverificacionestado: 'idpersonaverificacionestado',
  personaverificacionestadoid: 'personaverificacionestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  ispersonavalidated: 'ispersonavalidated',
  isestadofinal: 'isestadofinal',
  isusuarioedit: 'isusuarioedit',
  isenabledcomentariousuario: 'isenabledcomentariousuario',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.ProvinciaScalarFieldEnum = {
  idprovincia: 'idprovincia',
  provinciaid: 'provinciaid',
  iddepartamento: 'iddepartamento',
  codigoprovincia: 'codigoprovincia',
  nombreprovincia: 'nombreprovincia',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Region_naturalScalarFieldEnum = {
  idregionnatural: 'idregionnatural',
  regionnaturalid: 'regionnaturalid',
  nombreregionnatural: 'nombreregionnatural',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.RiesgoScalarFieldEnum = {
  idriesgo: 'idriesgo',
  riesgoid: 'riesgoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  score: 'score',
  color: 'color',
  descripcion: 'descripcion',
  porcentaje_comision_gestion: 'porcentaje_comision_gestion',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.RolScalarFieldEnum = {
  idrol: 'idrol',
  rolid: 'rolid',
  nombre: 'nombre',
  alias: 'alias',
  codigo: 'codigo',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.ServicioScalarFieldEnum = {
  idservicio: 'idservicio',
  servicioid: 'servicioid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  descripcion: 'descripcion',
  urlcontrato: 'urlcontrato',
  pathroute: 'pathroute',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Servicio_empresaScalarFieldEnum = {
  idservicioempresa: 'idservicioempresa',
  servicioempresaid: 'servicioempresaid',
  code: 'code',
  idservicio: 'idservicio',
  idempresa: 'idempresa',
  idusuariosuscriptor: 'idusuariosuscriptor',
  idservicioempresaestado: 'idservicioempresaestado',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Servicio_empresa_estadoScalarFieldEnum = {
  idservicioempresaestado: 'idservicioempresaestado',
  servicioempresaestadoid: 'servicioempresaestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  issuccessfulvalidation: 'issuccessfulvalidation',
  isestadofinal: 'isestadofinal',
  isusuarioedit: 'isusuarioedit',
  isenabledcomentariousuario: 'isenabledcomentariousuario',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Servicio_empresa_verificacionScalarFieldEnum = {
  idservicioempresaverificacion: 'idservicioempresaverificacion',
  servicioempresaverificacionid: 'servicioempresaverificacionid',
  idservicioempresa: 'idservicioempresa',
  idservicioempresaestado: 'idservicioempresaestado',
  idusuarioverifica: 'idusuarioverifica',
  comentariousuario: 'comentariousuario',
  comentariointerno: 'comentariointerno',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  idusuario: 'idusuario',
  usuarioid: 'usuarioid',
  code: 'code',
  iddocumentotipo: 'iddocumentotipo',
  documentonumero: 'documentonumero',
  usuarionombres: 'usuarionombres',
  apellidopaterno: 'apellidopaterno',
  apellidomaterno: 'apellidomaterno',
  email: 'email',
  celular: 'celular',
  isemailvalidated: 'isemailvalidated',
  ispersonavalidated: 'ispersonavalidated',
  hash: 'hash',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_rolScalarFieldEnum = {
  idusuario: 'idusuario',
  idrol: 'idrol',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_servicioScalarFieldEnum = {
  idusuarioservicio: 'idusuarioservicio',
  usuarioservicioid: 'usuarioservicioid',
  code: 'code',
  idusuario: 'idusuario',
  idservicio: 'idservicio',
  idusuarioservicioestado: 'idusuarioservicioestado',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_servicio_empresaScalarFieldEnum = {
  idusuarioservicioempresa: 'idusuarioservicioempresa',
  usuarioservicioempresaid: 'usuarioservicioempresaid',
  code: 'code',
  idusuario: 'idusuario',
  idempresa: 'idempresa',
  idservicio: 'idservicio',
  idusuarioservicioempresaestado: 'idusuarioservicioempresaestado',
  idusuarioservicioempresarol: 'idusuarioservicioempresarol',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_servicio_empresa_estadoScalarFieldEnum = {
  idusuarioservicioempresaestado: 'idusuarioservicioempresaestado',
  usuarioservicioempresaestadoid: 'usuarioservicioempresaestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_servicio_empresa_rolScalarFieldEnum = {
  idusuarioservicioempresarol: 'idusuarioservicioempresarol',
  usuarioservicioempresarolid: 'usuarioservicioempresarolid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_servicio_estadoScalarFieldEnum = {
  idusuarioservicioestado: 'idusuarioservicioestado',
  usuarioservicioestadoid: 'usuarioservicioestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Usuario_servicio_verificacionScalarFieldEnum = {
  idusuarioservicioverificacion: 'idusuarioservicioverificacion',
  usuarioservicioverificacionid: 'usuarioservicioverificacionid',
  idusuarioservicio: 'idusuarioservicio',
  idusuarioservicioestado: 'idusuarioservicioestado',
  idusuarioverifica: 'idusuarioverifica',
  comentariousuario: 'comentariousuario',
  comentariointerno: 'comentariointerno',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.ValidacionScalarFieldEnum = {
  idvalidacion: 'idvalidacion',
  validacionid: 'validacionid',
  idusuario: 'idusuario',
  idvalidaciontipo: 'idvalidaciontipo',
  valor: 'valor',
  otp: 'otp',
  tiempo_marca: 'tiempo_marca',
  tiempo_expiracion: 'tiempo_expiracion',
  verificado: 'verificado',
  fecha_verificado: 'fecha_verificado',
  codigo: 'codigo',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Validacion_tipoScalarFieldEnum = {
  idvalidaciontipo: 'idvalidaciontipo',
  validaciontipoid: 'validaciontipoid',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Zlaboratorio_pedidoScalarFieldEnum = {
  idpedido: 'idpedido',
  idusuario: 'idusuario',
  code: 'code',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.Zlaboratorio_usuarioScalarFieldEnum = {
  idusuario: 'idusuario',
  nombre: 'nombre',
  idusuariocrea: 'idusuariocrea',
  fechacrea: 'fechacrea',
  idusuariomod: 'idusuariomod',
  fechamod: 'fechamod',
  estado: 'estado'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.archivoOrderByRelevanceFieldEnum = {
  archivoid: 'archivoid',
  codigo: 'codigo',
  nombrereal: 'nombrereal',
  nombrealmacenamiento: 'nombrealmacenamiento',
  ruta: 'ruta',
  mimetype: 'mimetype',
  encoding: 'encoding',
  extension: 'extension',
  observacion: 'observacion'
};

exports.Prisma.archivo_estadoOrderByRelevanceFieldEnum = {
  archivoestadoid: 'archivoestadoid',
  nombre: 'nombre'
};

exports.Prisma.archivo_tipoOrderByRelevanceFieldEnum = {
  archivotipoid: 'archivotipoid',
  code: 'code',
  nombre: 'nombre'
};

exports.Prisma.bancoOrderByRelevanceFieldEnum = {
  bancoid: 'bancoid',
  tipo: 'tipo',
  nombre: 'nombre',
  alias: 'alias'
};

exports.Prisma.banco_cuentaOrderByRelevanceFieldEnum = {
  bancocuentaid: 'bancocuentaid',
  code: 'code',
  numero: 'numero'
};

exports.Prisma.banco_cuenta_estadoOrderByRelevanceFieldEnum = {
  bancocuentaestadoid: 'bancocuentaestadoid',
  code: 'code',
  nombre: 'nombre'
};

exports.Prisma.banco_cuenta_tipoOrderByRelevanceFieldEnum = {
  bancocuentatipoid: 'bancocuentatipoid',
  code: 'code',
  nombre: 'nombre'
};

exports.Prisma.banco_transaccionOrderByRelevanceFieldEnum = {
  bancotransaccionid: 'bancotransaccionid',
  code: 'code'
};

exports.Prisma.banco_transaccion_estadoOrderByRelevanceFieldEnum = {
  bancotransaccionestadoid: 'bancotransaccionestadoid',
  code: 'code',
  nombre: 'nombre'
};

exports.Prisma.banco_transaccion_estado_historialOrderByRelevanceFieldEnum = {
  bancotransaccionestadohistorialid: 'bancotransaccionestadohistorialid',
  code: 'code',
  motivo: 'motivo'
};

exports.Prisma.banco_transaccion_tipoOrderByRelevanceFieldEnum = {
  bancotransacciontipoid: 'bancotransacciontipoid',
  code: 'code',
  nombre: 'nombre'
};

exports.Prisma.colaboradorOrderByRelevanceFieldEnum = {
  colaboradorid: 'colaboradorid',
  documentonumero: 'documentonumero',
  nombrecolaborador: 'nombrecolaborador',
  apellidocolaborador: 'apellidocolaborador',
  cargo: 'cargo',
  email: 'email',
  telefono: 'telefono',
  poderpartidanumero: 'poderpartidanumero',
  poderpartidaciudad: 'poderpartidaciudad'
};

exports.Prisma.colaborador_tipoOrderByRelevanceFieldEnum = {
  colaboradortipoid: 'colaboradortipoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias'
};

exports.Prisma.configuracion_appOrderByRelevanceFieldEnum = {
  configuracionappid: 'configuracionappid',
  code: 'code',
  variable: 'variable',
  valor: 'valor',
  unidad: 'unidad'
};

exports.Prisma.contactoOrderByRelevanceFieldEnum = {
  contactoid: 'contactoid',
  code: 'code',
  nombrecontacto: 'nombrecontacto',
  apellidocontacto: 'apellidocontacto',
  cargo: 'cargo',
  email: 'email',
  celular: 'celular',
  telefono: 'telefono'
};

exports.Prisma.credencialOrderByRelevanceFieldEnum = {
  credencialid: 'credencialid',
  code: 'code',
  password: 'password'
};

exports.Prisma.cuenta_bancariaOrderByRelevanceFieldEnum = {
  cuentabancariaid: 'cuentabancariaid',
  code: 'code',
  numero: 'numero',
  cci: 'cci',
  alias: 'alias'
};

exports.Prisma.cuenta_bancaria_estadoOrderByRelevanceFieldEnum = {
  cuentabancariaestadoid: 'cuentabancariaestadoid',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.cuenta_tipoOrderByRelevanceFieldEnum = {
  cuentatipoid: 'cuentatipoid',
  nombre: 'nombre',
  alias: 'alias'
};

exports.Prisma.departamentoOrderByRelevanceFieldEnum = {
  departamentoid: 'departamentoid',
  codigodepartamento: 'codigodepartamento',
  nombredepartamento: 'nombredepartamento'
};

exports.Prisma.distritoOrderByRelevanceFieldEnum = {
  distritoid: 'distritoid',
  codigodistrito: 'codigodistrito',
  nombredistrito: 'nombredistrito',
  capitallegal: 'capitallegal'
};

exports.Prisma.documento_tipoOrderByRelevanceFieldEnum = {
  documentotipoid: 'documentotipoid',
  nombre: 'nombre',
  alias: 'alias'
};

exports.Prisma.empresaOrderByRelevanceFieldEnum = {
  empresaid: 'empresaid',
  code: 'code',
  ruc: 'ruc',
  razon_social: 'razon_social',
  nombre_comercial: 'nombre_comercial',
  domicilio_fiscal: 'domicilio_fiscal',
  direccion_sede: 'direccion_sede',
  direccion_sede_referencia: 'direccion_sede_referencia'
};

exports.Prisma.empresa_cuenta_bancariaOrderByRelevanceFieldEnum = {
  empresacuentabancariaid: 'empresacuentabancariaid',
  code: 'code'
};

exports.Prisma.factorOrderByRelevanceFieldEnum = {
  factorid: 'factorid',
  code: 'code',
  ruc: 'ruc',
  razon_social: 'razon_social',
  nombre_comercial: 'nombre_comercial',
  domicilio_fiscal: 'domicilio_fiscal',
  direccion_sede: 'direccion_sede',
  direccion_sede_referencia: 'direccion_sede_referencia'
};

exports.Prisma.factor_cuenta_bancariaOrderByRelevanceFieldEnum = {
  factorcuentabancariaid: 'factorcuentabancariaid',
  code: 'code'
};

exports.Prisma.factoringOrderByRelevanceFieldEnum = {
  factoringid: 'factoringid',
  code: 'code'
};

exports.Prisma.factoring_config_comisionOrderByRelevanceFieldEnum = {
  factoringconfigcomisionid: 'factoringconfigcomisionid',
  code: 'code'
};

exports.Prisma.factoring_config_garantiaOrderByRelevanceFieldEnum = {
  factoringconfiggarantiaid: 'factoringconfiggarantiaid',
  code: 'code'
};

exports.Prisma.factoring_config_tasa_descuentoOrderByRelevanceFieldEnum = {
  factoringconfigtasadescuentoid: 'factoringconfigtasadescuentoid',
  code: 'code'
};

exports.Prisma.factoring_ejecutadoOrderByRelevanceFieldEnum = {
  factoringejecutadoid: 'factoringejecutadoid',
  code: 'code'
};

exports.Prisma.factoring_ejecutado_estadoOrderByRelevanceFieldEnum = {
  factoringejecutadoestadoid: 'factoringejecutadoestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.factoring_estadoOrderByRelevanceFieldEnum = {
  factoringestadoid: 'factoringestadoid',
  estado1: 'estado1',
  estado2: 'estado2',
  alias_estado1: 'alias_estado1',
  alias_estado2: 'alias_estado2',
  accion: 'accion'
};

exports.Prisma.factoring_estrategiaOrderByRelevanceFieldEnum = {
  factoringestrategiaid: 'factoringestrategiaid',
  code: 'code',
  nombre_estrategia: 'nombre_estrategia',
  descripcion: 'descripcion'
};

exports.Prisma.factoring_historial_estadoOrderByRelevanceFieldEnum = {
  factoringhistorialestadoid: 'factoringhistorialestadoid',
  code: 'code',
  comentario: 'comentario'
};

exports.Prisma.factoring_inversionOrderByRelevanceFieldEnum = {
  factoringinversionid: 'factoringinversionid',
  code: 'code'
};

exports.Prisma.factoring_pagoOrderByRelevanceFieldEnum = {
  factoringpagoid: 'factoringpagoid',
  code: 'code',
  numero_operacion: 'numero_operacion'
};

exports.Prisma.factoring_propuestaOrderByRelevanceFieldEnum = {
  factoringpropuestaid: 'factoringpropuestaid',
  code: 'code'
};

exports.Prisma.factoring_propuesta_estadoOrderByRelevanceFieldEnum = {
  factoringpropuestaestadoid: 'factoringpropuestaestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.factoring_propuesta_financieroOrderByRelevanceFieldEnum = {
  factoringpropuestafinancieroid: 'factoringpropuestafinancieroid',
  code: 'code',
  descripcion: 'descripcion'
};

exports.Prisma.factoring_tipoOrderByRelevanceFieldEnum = {
  factoringtipoid: 'factoringtipoid',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.facturaOrderByRelevanceFieldEnum = {
  facturaid: 'facturaid',
  code: 'code',
  UBLVersionID: 'UBLVersionID',
  CustomizationID: 'CustomizationID',
  serie: 'serie',
  numero_comprobante: 'numero_comprobante',
  codigo_tipo_documento: 'codigo_tipo_documento',
  codigo_tipo_moneda: 'codigo_tipo_moneda',
  proveedor_ruc: 'proveedor_ruc',
  proveedor_razon_social: 'proveedor_razon_social',
  proveedor_direccion: 'proveedor_direccion',
  proveedor_codigo_pais: 'proveedor_codigo_pais',
  proveedor_ubigeo: 'proveedor_ubigeo',
  proveedor_provincia: 'proveedor_provincia',
  proveedor_departamento: 'proveedor_departamento',
  proveedor_urbanizacion: 'proveedor_urbanizacion',
  proveedor_distrito: 'proveedor_distrito',
  cliente_ruc: 'cliente_ruc',
  cliente_razon_social: 'cliente_razon_social',
  codigo_archivo: 'codigo_archivo'
};

exports.Prisma.factura_impuestoOrderByRelevanceFieldEnum = {
  facturaimpuestoid: 'facturaimpuestoid',
  id: 'id',
  codigo_sunat: 'codigo_sunat',
  nombre: 'nombre'
};

exports.Prisma.factura_itemOrderByRelevanceFieldEnum = {
  facturaitemid: 'facturaitemid',
  id: 'id',
  codigo_producto_sunat: 'codigo_producto_sunat',
  codigo_producto_vendedor: 'codigo_producto_vendedor',
  unidad_medida: 'unidad_medida',
  descripcion: 'descripcion',
  impuesto_codigo_sunat: 'impuesto_codigo_sunat',
  impuesto_nombre: 'impuesto_nombre',
  impuesto_codigo_afectacion_sunat: 'impuesto_codigo_afectacion_sunat',
  moneda: 'moneda'
};

exports.Prisma.factura_medio_pagoOrderByRelevanceFieldEnum = {
  facturamediopagoid: 'facturamediopagoid',
  id: 'id',
  medio_pago_codigo: 'medio_pago_codigo',
  cuenta_bancaria: 'cuenta_bancaria'
};

exports.Prisma.factura_notaOrderByRelevanceFieldEnum = {
  facturanotaid: 'facturanotaid',
  id: 'id',
  descripcion: 'descripcion'
};

exports.Prisma.factura_termino_pagoOrderByRelevanceFieldEnum = {
  facturaterminopagoid: 'facturaterminopagoid',
  id: 'id',
  forma_pago: 'forma_pago'
};

exports.Prisma.financiero_conceptoOrderByRelevanceFieldEnum = {
  financieroconceptoid: 'financieroconceptoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.financiero_tipoOrderByRelevanceFieldEnum = {
  financierotipoid: 'financierotipoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.generoOrderByRelevanceFieldEnum = {
  generoid: 'generoid',
  nombregenero: 'nombregenero'
};

exports.Prisma.inversionistaOrderByRelevanceFieldEnum = {
  inversionistaid: 'inversionistaid',
  code: 'code'
};

exports.Prisma.inversionista_cuenta_bancariaOrderByRelevanceFieldEnum = {
  inversionistacuentabancariaid: 'inversionistacuentabancariaid',
  code: 'code'
};

exports.Prisma.inversionista_depositoOrderByRelevanceFieldEnum = {
  inversionistadepositoid: 'inversionistadepositoid',
  code: 'code',
  numero_operacion: 'numero_operacion',
  comentario: 'comentario'
};

exports.Prisma.inversionista_retiroOrderByRelevanceFieldEnum = {
  inversionistaretiroid: 'inversionistaretiroid',
  code: 'code',
  numero_operacion: 'numero_operacion',
  comentario: 'comentario'
};

exports.Prisma.monedaOrderByRelevanceFieldEnum = {
  monedaid: 'monedaid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  codigo: 'codigo',
  simbolo: 'simbolo',
  color: 'color'
};

exports.Prisma.paisOrderByRelevanceFieldEnum = {
  paisid: 'paisid',
  codigopais: 'codigopais',
  nombrepais: 'nombrepais',
  nacionalidad: 'nacionalidad'
};

exports.Prisma.pep_vinculoOrderByRelevanceFieldEnum = {
  pepvinculoid: 'pepvinculoid',
  nombrepepvinculo: 'nombrepepvinculo'
};

exports.Prisma.personaOrderByRelevanceFieldEnum = {
  personaid: 'personaid',
  code: 'code',
  documentonumero: 'documentonumero',
  personanombres: 'personanombres',
  apellidopaterno: 'apellidopaterno',
  apellidomaterno: 'apellidomaterno',
  email: 'email',
  celular: 'celular',
  direccion: 'direccion',
  direccionreferencia: 'direccionreferencia'
};

exports.Prisma.persona_cuenta_bancariaOrderByRelevanceFieldEnum = {
  personacuentabancariaid: 'personacuentabancariaid',
  code: 'code'
};

exports.Prisma.persona_declaracionOrderByRelevanceFieldEnum = {
  personadeclaracionid: 'personadeclaracionid'
};

exports.Prisma.persona_pep_directoOrderByRelevanceFieldEnum = {
  personapepdirectoid: 'personapepdirectoid',
  rucentidad: 'rucentidad',
  nombreentidad: 'nombreentidad',
  cargoentidad: 'cargoentidad'
};

exports.Prisma.persona_pep_indirectoOrderByRelevanceFieldEnum = {
  personapepindirectoid: 'personapepindirectoid',
  identificacionpep: 'identificacionpep',
  nombrescompletospep: 'nombrescompletospep',
  rucentidad: 'rucentidad',
  nombreentidad: 'nombreentidad',
  cargoentidad: 'cargoentidad'
};

exports.Prisma.persona_verificacionOrderByRelevanceFieldEnum = {
  personaverificacionid: 'personaverificacionid',
  comentariousuario: 'comentariousuario',
  comentariointerno: 'comentariointerno'
};

exports.Prisma.persona_verificacion_estadoOrderByRelevanceFieldEnum = {
  personaverificacionestadoid: 'personaverificacionestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.provinciaOrderByRelevanceFieldEnum = {
  provinciaid: 'provinciaid',
  codigoprovincia: 'codigoprovincia',
  nombreprovincia: 'nombreprovincia'
};

exports.Prisma.region_naturalOrderByRelevanceFieldEnum = {
  regionnaturalid: 'regionnaturalid',
  nombreregionnatural: 'nombreregionnatural'
};

exports.Prisma.riesgoOrderByRelevanceFieldEnum = {
  riesgoid: 'riesgoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color',
  descripcion: 'descripcion'
};

exports.Prisma.rolOrderByRelevanceFieldEnum = {
  rolid: 'rolid',
  nombre: 'nombre',
  alias: 'alias',
  codigo: 'codigo'
};

exports.Prisma.servicioOrderByRelevanceFieldEnum = {
  servicioid: 'servicioid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  descripcion: 'descripcion',
  urlcontrato: 'urlcontrato',
  pathroute: 'pathroute'
};

exports.Prisma.servicio_empresaOrderByRelevanceFieldEnum = {
  servicioempresaid: 'servicioempresaid',
  code: 'code'
};

exports.Prisma.servicio_empresa_estadoOrderByRelevanceFieldEnum = {
  servicioempresaestadoid: 'servicioempresaestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.servicio_empresa_verificacionOrderByRelevanceFieldEnum = {
  servicioempresaverificacionid: 'servicioempresaverificacionid',
  comentariousuario: 'comentariousuario',
  comentariointerno: 'comentariointerno'
};

exports.Prisma.usuarioOrderByRelevanceFieldEnum = {
  usuarioid: 'usuarioid',
  code: 'code',
  documentonumero: 'documentonumero',
  usuarionombres: 'usuarionombres',
  apellidopaterno: 'apellidopaterno',
  apellidomaterno: 'apellidomaterno',
  email: 'email',
  celular: 'celular',
  hash: 'hash'
};

exports.Prisma.usuario_servicioOrderByRelevanceFieldEnum = {
  usuarioservicioid: 'usuarioservicioid',
  code: 'code'
};

exports.Prisma.usuario_servicio_empresaOrderByRelevanceFieldEnum = {
  usuarioservicioempresaid: 'usuarioservicioempresaid',
  code: 'code'
};

exports.Prisma.usuario_servicio_empresa_estadoOrderByRelevanceFieldEnum = {
  usuarioservicioempresaestadoid: 'usuarioservicioempresaestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.usuario_servicio_empresa_rolOrderByRelevanceFieldEnum = {
  usuarioservicioempresarolid: 'usuarioservicioempresarolid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.usuario_servicio_estadoOrderByRelevanceFieldEnum = {
  usuarioservicioestadoid: 'usuarioservicioestadoid',
  code: 'code',
  nombre: 'nombre',
  alias: 'alias',
  color: 'color'
};

exports.Prisma.usuario_servicio_verificacionOrderByRelevanceFieldEnum = {
  usuarioservicioverificacionid: 'usuarioservicioverificacionid',
  comentariousuario: 'comentariousuario',
  comentariointerno: 'comentariointerno'
};

exports.Prisma.validacionOrderByRelevanceFieldEnum = {
  validacionid: 'validacionid',
  valor: 'valor',
  otp: 'otp',
  codigo: 'codigo'
};

exports.Prisma.validacion_tipoOrderByRelevanceFieldEnum = {
  validaciontipoid: 'validaciontipoid',
  nombre: 'nombre'
};

exports.Prisma.zlaboratorio_pedidoOrderByRelevanceFieldEnum = {
  code: 'code',
  nombre: 'nombre'
};

exports.Prisma.zlaboratorio_usuarioOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};


exports.Prisma.ModelName = {
  archivo: 'archivo',
  archivo_colaborador: 'archivo_colaborador',
  archivo_cuenta_bancaria: 'archivo_cuenta_bancaria',
  archivo_empresa: 'archivo_empresa',
  archivo_estado: 'archivo_estado',
  archivo_factoring_historial_estado: 'archivo_factoring_historial_estado',
  archivo_factura: 'archivo_factura',
  archivo_inversionista_deposito: 'archivo_inversionista_deposito',
  archivo_inversionista_retiro: 'archivo_inversionista_retiro',
  archivo_persona: 'archivo_persona',
  archivo_tipo: 'archivo_tipo',
  banco: 'banco',
  banco_cuenta: 'banco_cuenta',
  banco_cuenta_estado: 'banco_cuenta_estado',
  banco_cuenta_tipo: 'banco_cuenta_tipo',
  banco_transaccion: 'banco_transaccion',
  banco_transaccion_estado: 'banco_transaccion_estado',
  banco_transaccion_estado_historial: 'banco_transaccion_estado_historial',
  banco_transaccion_factoring_inversion: 'banco_transaccion_factoring_inversion',
  banco_transaccion_inversionista_deposito: 'banco_transaccion_inversionista_deposito',
  banco_transaccion_inversionista_retiro: 'banco_transaccion_inversionista_retiro',
  banco_transaccion_tipo: 'banco_transaccion_tipo',
  colaborador: 'colaborador',
  colaborador_tipo: 'colaborador_tipo',
  configuracion_app: 'configuracion_app',
  contacto: 'contacto',
  credencial: 'credencial',
  cuenta_bancaria: 'cuenta_bancaria',
  cuenta_bancaria_estado: 'cuenta_bancaria_estado',
  cuenta_tipo: 'cuenta_tipo',
  departamento: 'departamento',
  distrito: 'distrito',
  documento_tipo: 'documento_tipo',
  empresa: 'empresa',
  empresa_cuenta_bancaria: 'empresa_cuenta_bancaria',
  factor: 'factor',
  factor_cuenta_bancaria: 'factor_cuenta_bancaria',
  factoring: 'factoring',
  factoring_config_comision: 'factoring_config_comision',
  factoring_config_garantia: 'factoring_config_garantia',
  factoring_config_tasa_descuento: 'factoring_config_tasa_descuento',
  factoring_ejecutado: 'factoring_ejecutado',
  factoring_ejecutado_estado: 'factoring_ejecutado_estado',
  factoring_estado: 'factoring_estado',
  factoring_estrategia: 'factoring_estrategia',
  factoring_factura: 'factoring_factura',
  factoring_historial_estado: 'factoring_historial_estado',
  factoring_inversion: 'factoring_inversion',
  factoring_pago: 'factoring_pago',
  factoring_propuesta: 'factoring_propuesta',
  factoring_propuesta_estado: 'factoring_propuesta_estado',
  factoring_propuesta_financiero: 'factoring_propuesta_financiero',
  factoring_tipo: 'factoring_tipo',
  factura: 'factura',
  factura_impuesto: 'factura_impuesto',
  factura_item: 'factura_item',
  factura_medio_pago: 'factura_medio_pago',
  factura_nota: 'factura_nota',
  factura_termino_pago: 'factura_termino_pago',
  financiero_concepto: 'financiero_concepto',
  financiero_tipo: 'financiero_tipo',
  genero: 'genero',
  inversionista: 'inversionista',
  inversionista_banco_cuenta: 'inversionista_banco_cuenta',
  inversionista_cuenta_bancaria: 'inversionista_cuenta_bancaria',
  inversionista_deposito: 'inversionista_deposito',
  inversionista_retiro: 'inversionista_retiro',
  moneda: 'moneda',
  pais: 'pais',
  pep_vinculo: 'pep_vinculo',
  persona: 'persona',
  persona_cuenta_bancaria: 'persona_cuenta_bancaria',
  persona_declaracion: 'persona_declaracion',
  persona_pep_directo: 'persona_pep_directo',
  persona_pep_indirecto: 'persona_pep_indirecto',
  persona_verificacion: 'persona_verificacion',
  persona_verificacion_estado: 'persona_verificacion_estado',
  provincia: 'provincia',
  region_natural: 'region_natural',
  riesgo: 'riesgo',
  rol: 'rol',
  servicio: 'servicio',
  servicio_empresa: 'servicio_empresa',
  servicio_empresa_estado: 'servicio_empresa_estado',
  servicio_empresa_verificacion: 'servicio_empresa_verificacion',
  usuario: 'usuario',
  usuario_rol: 'usuario_rol',
  usuario_servicio: 'usuario_servicio',
  usuario_servicio_empresa: 'usuario_servicio_empresa',
  usuario_servicio_empresa_estado: 'usuario_servicio_empresa_estado',
  usuario_servicio_empresa_rol: 'usuario_servicio_empresa_rol',
  usuario_servicio_estado: 'usuario_servicio_estado',
  usuario_servicio_verificacion: 'usuario_servicio_verificacion',
  validacion: 'validacion',
  validacion_tipo: 'validacion_tipo',
  zlaboratorio_pedido: 'zlaboratorio_pedido',
  zlaboratorio_usuario: 'zlaboratorio_usuario'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
